#include "stdio.h"
#include "string.h"
#include "malloc.h"

struct modulFAV
{
	char* idAeronava;
	enum {PAS,CAR}tipAero;
	short int nrLocuri;
	double greutateMaxima;
};

struct NodLista
{
	modulFAV* infoUtil;
	NodLista* next;
	NodLista* prev;
};

struct Lista{
	NodLista* prim;
	NodLista* ultim;
};


NodLista* creareNod(modulFAV* fav)
{
	NodLista* nou = nullptr;
	nou = (NodLista*)malloc(sizeof(NodLista));
	nou->infoUtil = fav;
	nou->next = nou->prev = NULL;
	return nou;

}

//void inserare_inceput(Lista* lista, NodLista* nod)
//{
//	if (lista == NULL)
//	{
//		lista->prim = lista->ultim = nod;
//	}
//	else
//	{
//		nod->next = lista->prim;
//		lista->prim->prev = nod;
//		lista->prim = nod;
//	}
//
//
//}
NodLista* inserareNod(NodLista*& lista, NodLista* nod)
{
	nod->next = lista;
	lista = nod;
	return lista;
	/*if (lista == NULL)
	{
		lista= nod;
		
	}
	else
	{
		NodLista* tmp = lista;
		while (tmp->next)
			tmp = tmp->next;
		tmp->next =tmp->prev= nod;
	}
	return lista;*/
}

NodLista* inserareSfarsit(NodLista* lista, NodLista* nod)
{
	return lista;
}
void parcurgere(NodLista* lista)
{
	//NodLista* nod = lista->next;
	/*while (nod)
	{
		printf(" %s %lf %i %d\n", nod->infoUtil->idAeronava, nod->infoUtil->greutateMaxima, nod->infoUtil->tipAero, nod->infoUtil->nrLocuri);
		nod = nod->next;
	}*/
	while (lista)
	{
		printf(" %s %lf %i %d\n", lista->infoUtil->idAeronava, lista->infoUtil->greutateMaxima, lista->infoUtil->tipAero, lista->infoUtil->nrLocuri);
		lista = lista->next;
	}
} 

void citireFisier(FILE* file)
{
	NodLista* lista = NULL;
	Lista* l = NULL;
	

	if (!file)
	{
		printf("Nu se poate deschide fisierul!");

	}
	else
	{
		modulFAV* fav = NULL;
		fav = (modulFAV*)malloc(sizeof(modulFAV));
		char buff[100];
		fscanf(file, "%s", buff);
		while (!feof(file))
		{
			fav->idAeronava = (char*)malloc(sizeof(char)*(strlen(buff) + 1));
			strcpy(fav->idAeronava, buff);
			int tip = 0;
			fscanf(file, "%d", &tip);
			switch (tip)
			{
			case 0:fav->tipAero = fav->PAS; break;
			case 1:fav->tipAero = fav->CAR; break;
			}
			fscanf(file, "%d", &fav->nrLocuri);
			fscanf(file, "%lf", &fav->greutateMaxima);
			NodLista* nod= creareNod(fav);
			
			lista= inserareNod(lista, nod);
			//inserare_inceput(l, nod);


			fscanf(file, "%s", buff);

		}
		parcurgere(lista);
		
	}

}

void main()

{
	FILE* file;
	file = fopen("flaero.txt", "r");;
	citireFisier(file);
}
